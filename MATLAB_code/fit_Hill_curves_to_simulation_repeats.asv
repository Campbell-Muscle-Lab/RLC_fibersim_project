function fit_Hill_curves_to_simulation_repeats
% Takes a standard FiberSim pCa_analysis file and calculates fits for each
% repeat

%Path
addpath(genpath('../../MATLAB_Utilities'))

% Variables 
pCa_analysis_file = '../test_data/pCa_analysis.xlsx';
output_file = '../test_data/Hill_curve_repeats.xlsx';

% Read excel sheet 
d = readtable(pCa_analysis_file)

dn = d.Properties.VariableNames'

% Find the number of conditions and pCa values to analyze
unique_conditions = unique(d.curve);
unique_pCa_values = unique(d.hs_pCa);

% Deduce number of repeats
no_of_repeats = size(d,1) / ...
    (numel(unique_conditions) * numel(unique_pCa_values))

% Create a variable to hold the output
out = [];

% Loop through the conditions
for cond_i = 1 : numel(unique_conditions)

    % Find all the indices for the condition
    vi_cond = find(d.curve == unique_conditions(cond_i));

    % Now pull off the values for the different repeats
    for repeat_i = 1 : no_of_repeats

        vi_repeat = vi_cond(repeat_i : no_of_repeats : )




        % Empty the arrays for this repeat
        pCa = [];
        y = [];

        % Build up for each value
        for pCa_i = 1 : numel(unique_pCa_values)

            vi = find( (d.curve == unique_conditions(condi_i)) & ...
                        (d.hs_pCa == unique_pCa_values(pCa_i)))

            pCa(pCa_i) = d.hs_pCa(vi(pCa_i));
            y(pCa_i) = d.hs_force(vi(pCa_i));
        end
    
        % Fit the curve
        [pCa_50, n_H, f_min, f_amp, r_sq] = ...
            fit_Hill_curve(pCa, y)
    
        pd = [];
        pd(1).pCa = pCa;
        pd(1).y = y;
        pd(1).y_error = 0 * y;
    
        figure(1);
        clf;
        plot_pCa_data_with_y_errors(pd);
    
        error('ken')
    end
end
% 
%     % Store the data
%     out.curve(curve_ind) = unique_curves(curve_ind);
%     out.hs_length(curve_ind) = d.hs_length(vi(1));
%     out.pCa_50(curve_ind) = pCa_50;
%     out.n_H(curve_ind) = n_H;
%     out.f_min(curve_ind) = f_min;
%     out.f_amp(curve_ind) = f_amp;
%     out.f_max(curve_ind) = f_min + f_amp;
%     out.r_sq(curve_ind) = r_sq;
% 
% end
% 
% % out is a structure, with data in wrong row column format
% out = columnize_structure(out);
% 
% % Convert to a table
% out = struct2table(out)
% 
% % Clean any existing file
% try
%     delete(output_file);
% end
% writetable(out, output_file);